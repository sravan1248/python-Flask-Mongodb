from flask import Flask,request,jsonify
from flask_pymongo import PyMongo
from flask_cors import CORS
from time import strftime,requests
from flask_jwt_extended import (JWTManager,create_access_token)

app = Flask(__name__)

mail = Mail(app)
app.config["MONGO_DBNAME"] = "database_name"
app.config["MONGO_URI"] = "mongodb://localhost:27017/database_name"
mongo = PyMongo(app)

APP_ROOT = os.path.dirname(os.path.abspath(__file__))
UPLOAD = os.path.join(APP_ROOT,'User_Images')
if not os.path.exists(UPLOAD):
    os.makedirs(UPLOAD)

ALLOWED_EXTENSIONS = ['png', 'jpg', 'jpeg', 'gif']
UPLOAD_FOLDER = os.path.join(APP_ROOT, UPLOAD)

app.config['UPLOAD_FOLDER'] = UPLOAD_FOLDER
@app.route('/upload_photo/<UserId>', methods=['POST', 'GET'])
@cross_origin(supports_credentials=True)
def upload_photo(UserId):
    data = mongo.db.register
    output=[]
    if request.method == 'POST':
        file = request.files['file']
        filename = secure_filename(file.filename)
        mongo_db_path = "/User_Images/" + filename
        filepath = os.path.join(app.config['UPLOAD_FOLDER'], filename)
        print(filepath)
        target = file.save(os.path.join(app.config['UPLOAD_FOLDER'], filename))
        print(target)
        file.save(target)
        users = data.find({'UserId': int(UserId)})
        try:
            for user in users:
                # print(user)
                data.find_one_and_update({'UserId': int(UserId)}, {'$set': {'profile_image_path': mongo_db_path}})
                username= user['Name']
                output.append({'UserId':UserId,'profile_image_path':mongo_db_path,'username':username})
                return jsonify({'status':'success','result':output})
        except Exception as e:
            return jsonify({'status':'fail','output':str(e)})
