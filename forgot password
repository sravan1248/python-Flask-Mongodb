from flask import Flask,request,jsonify
from flask_pymongo import PyMongo
from flask_cors import CORS
from time import strftime
from random import randint
import smtplib,base64,requests
from flask_jwt_extended import (JWTManager,create_access_token)

app = Flask(__name__)
app.config["MONGO_DBNAME"] = "database_name"
app.config["MONGO_URI"] = "mongodb://localhost:27017/database_name"
mongo = PyMongo(app)
app.config['JWT_SECRET_KEY'] = 'super-secret'
jwt = JWTManager(app)
app.config['MAIL_SERVER'] ='smtp.gmail.com'
app.config['MAIL_PORT'] = 465
app.config['MAIL_USERNAME'] = 'email@gmail.com'
app.config['MAIL_PASSWORD'] = 'password'
app.config['MAIL_DEFAULT_SENDER'] = 'default_sender_email'
app.config['MAIL_USE_TLS'] = False
app.config['MAIL_USE_SSL'] = True
app.config['DEBUG'] = True
app.secret_key = 'my secret key'
app.config['MAIL_ASCII_ATTACHMENTS'] = True
app.config['SESSION_USE_SIGNER'] = True

mail = Mail(app)
app.config["MONGO_DBNAME"] = "database_name"
app.config["MONGO_URI"] = "mongodb://localhost:27017/database_name"
mongo = PyMongo(app)

@app.route('/email_send', methods=['POST'])
def email_send():
    emailid = request.json['emailid']
    SUBJECT = 'subject'
    message = 'Subject: {}'.format(SUBJECT)
    server = smtplib.SMTP('smtp.gmail.com',587)
    server.starttls()
    server.login(''email@gmail.com','password')
    server.sendmail('email@gmail.com',emailid,message)
    return jsonify({'Status': 'Success', 'message': 'Get Successfully'})

@app.route('/forgot_password', methods=['POST'])
def forgot_password():
    register = mongo.db.register_user
    emailid = request.json['emailid']
    if register.find_one({'EmailId': emailid}) is not None:
        otp_value = randint(1000, 9999)
        register = mongo.db.register
        output = []
        register.find_one_and_update({'EmailId': emailid}, {'$set': {'OTP': str(otp_value)}})
        msg = Message('forgot password', sender='youremail@gmail.com', recipients=[emailid])
        msg.body = "Your OTP is:" + str(otp_value)
        mail.send(msg)
        output.append({'otp':otp_value})
        return jsonify({'status': 'success', "message": "OTP generated successfully", "Result":output})
    else:
        return jsonify({'status': "failure", "message": "This Email entered is not in the Database.Please enter registered emailid!"})
    
   if __name__ == '__main__':
    app.run(debug=True)
